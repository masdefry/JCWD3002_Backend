// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String
  email    String
  password String

  comments Comment[]
  likes    Like[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("users")
}

model Post {
  id       Int    @id @default(autoincrement())
  imageUrl String
  caption  String

  comments Comment[]
  likes    Like[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@map("posts")
}

model Comment {
  usersId String
  users   User   @relation(fields: [usersId], references: [id])
  postsId Int
  posts   Post   @relation(fields: [postsId], references: [id])
  comment String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@id([usersId, postsId])
  @@map("comments")
}

model Like {
  usersId String
  users   User    @relation(fields: [usersId], references: [id])
  postsId Int
  posts   Post    @relation(fields: [postsId], references: [id])
  isLike  Boolean

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@id([usersId, postsId])
  @@map("likes")
}
